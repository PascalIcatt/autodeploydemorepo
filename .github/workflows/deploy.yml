name: Build, Push, and Deploy with Helm

on:
  push:
    branches: [ main ]
    
permissions:
  contents: write
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate version tag
        id: version
        run: |
          VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$VERSION" ]; then
            VERSION="0.0.1"
          fi
          COMMIT=$(git rev-parse --short HEAD)
          IMAGE_TAG="${VERSION}-${COMMIT}"
          echo "::set-output name=image_tag::${IMAGE_TAG}"
          CHART_VERSION="${VERSION}-${GITHUB_RUN_NUMBER}"
          echo "::set-output name=chart_version::${CHART_VERSION}"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_SECRET }}

      - name: Build and push AutoDeployDemoApp.WebApi image
        run: |
          docker build -t ghcr.io/pascalicatt/autodeploydemoapp.webapi:${{ steps.version.outputs.image_tag }} -f AutoDeployDemoApp.WebApi/Dockerfile .
          docker push ghcr.io/pascalicatt/autodeploydemoapp.webapi:${{ steps.version.outputs.image_tag }}

      - name: Build and push AutoDeployDemoApp.CronJob image
        run: |
          docker build -t ghcr.io/pascalicatt/autodeploydemoapp.cronjob:${{ steps.version.outputs.image_tag }} -f AutoDeployDemoApp.CronJob/Dockerfile .
          docker push ghcr.io/pascalicatt/autodeploydemoapp.cronjob:${{ steps.version.outputs.image_tag }}

      - name: Set up Git user
        run: |
          git config --global user.email "pascal@icatt.nl"
          git config --global user.name "PascalIcatt"

      - name: Get Version in PR Branch
        id: pr-version
        run: |
          PR_VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" ./charts/autodeploydemoapp-umbrella-chart/Chart.yaml)
          echo "pr_version=$PR_VERSION" >> $GITHUB_OUTPUT

      - name: Get Version in Main Branch
        id: main-version
        run: |
          git fetch origin main
          MAIN_VERSION=$(git show origin/main:./charts/autodeploydemoapp-umbrella-chart/Chart.yaml | grep -oPm1 "(?<=<Version>)[^<]+")
          echo "main_version=$MAIN_VERSION" >> $GITHUB_OUTPUT
          
      - name: Update Chart Dependencies
        working-directory: ./charts/autodeploydemoapp-umbrella-chart
        run: if [ "${{ steps.pr-version.outputs.pr_version }}" = "${{ steps.main-version.outputs.main_version }}" ]; then
            echo "Umbrella Version has not been incremented."
          else
            echo "Umbrella Version has been incremented."
            helm dependency update
          fi
      
      - name: Release Helm Charts with Chart Releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          skip_existing: true
          charts_dir: charts
        env:
          CR_TOKEN: ${{ secrets.PACKAGE_SECRET }}
          CR_OWNER: ${{ github.repository_owner }}
          CR_REPO: ${{ github.event.repository.name }}
          CR_FORCE: "true"
